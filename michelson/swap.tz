{ parameter
    (or (or (or (pair %buy (address %address_to) (nat %amount)) (string %setCurrency))
            (or (bool %setPause) (address %setTokenIn)))
        (or (or (address %setTokenOut) (nat %setTokenPrice)) (address %setTreasury))) ;
  storage
    (pair (address %token_in_address)
          (address %token_out_address)
          (address %treasury)
          (nat %token_price)
          (address %admin)
          (bool %paused)
          (string %currency)
          (nat %factor_decimals)) ;
  code { PUSH nat 2 ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DUP 2 ;
                     GET 11 ;
                     IF { DROP 2 ; PUSH nat 4 ; FAILWITH }
                        { NIL operation ;
                          PUSH string "XTZ" ;
                          DUP 4 ;
                          GET 13 ;
                          COMPARE ;
                          EQ ;
                          IF { PUSH mutez 1 ;
                               DUP 3 ;
                               CDR ;
                               MUL ;
                               AMOUNT ;
                               COMPARE ;
                               NEQ ;
                               IF { DROP ; PUSH nat 6 ; FAILWITH }
                                  { PUSH mutez 1 ;
                                    DUP 3 ;
                                    CDR ;
                                    MUL ;
                                    DUP 4 ;
                                    GET 5 ;
                                    CONTRACT unit ;
                                    IF_NONE
                                      { DROP ; PUSH nat 5 ; FAILWITH }
                                      { SWAP ; UNIT ; TRANSFER_TOKENS } ;
                                    CONS } }
                             { NIL (pair address (list (pair address nat nat))) ;
                               NIL (pair address nat nat) ;
                               DUP 4 ;
                               CDR ;
                               PUSH nat 0 ;
                               DUP 7 ;
                               GET 5 ;
                               PAIR 3 ;
                               CONS ;
                               SENDER ;
                               PAIR ;
                               CONS ;
                               DUP 4 ;
                               CAR ;
                               CONTRACT %transfer (list (pair address (list (pair address nat nat)))) ;
                               IF_NONE { PUSH nat 3 ; FAILWITH } {} ;
                               SWAP ;
                               MAP { DUP ;
                                     CDR ;
                                     MAP { DUP ; GET 4 ; DUP 2 ; GET 3 ; PAIR ; SWAP ; CAR ; PAIR } ;
                                     SWAP ;
                                     CAR ;
                                     PAIR } ;
                               SWAP ;
                               PUSH mutez 0 ;
                               DIG 2 ;
                               TRANSFER_TOKENS ;
                               CONS } ;
                          DUP 3 ;
                          GET 7 ;
                          DUP 4 ;
                          GET 14 ;
                          DUP 4 ;
                          CDR ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          DIG 2 ;
                          CAR ;
                          SELF_ADDRESS ;
                          DUP 5 ;
                          GET 3 ;
                          PAIR 4 ;
                          UNPAIR 4 ;
                          CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                          IF_NONE { PUSH nat 1 ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DIG 4 ;
                          DIG 4 ;
                          DIG 4 ;
                          PAIR 3 ;
                          TRANSFER_TOKENS ;
                          CONS ;
                          PAIR } }
                   { DUP 2 ;
                     GET 9 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP 2 ; FAILWITH }
                        { DIG 2 ; DROP ; UPDATE 13 ; NIL operation ; PAIR } } }
               { IF_LEFT
                   { DUP 2 ;
                     GET 9 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP 2 ; FAILWITH }
                        { DIG 2 ; DROP ; UPDATE 11 ; NIL operation ; PAIR } }
                   { DUP 2 ;
                     GET 9 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP 2 ; FAILWITH }
                        { DIG 2 ; DROP ; UPDATE 1 ; NIL operation ; PAIR } } } }
           { IF_LEFT
               { IF_LEFT
                   { DUP 2 ;
                     GET 9 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP 2 ; FAILWITH }
                        { DIG 2 ; DROP ; UPDATE 3 ; NIL operation ; PAIR } }
                   { DUP 2 ;
                     GET 9 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP 2 ; FAILWITH }
                        { DIG 2 ; DROP ; UPDATE 7 ; NIL operation ; PAIR } } }
               { DUP 2 ;
                 GET 9 ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DROP 2 ; FAILWITH }
                    { DIG 2 ; DROP ; UPDATE 5 ; NIL operation ; PAIR } } } } }

